import gleam/dict
import gleam/erlang/process
import gleam/int
import gleam/io
import gleam/list
import gleam/result
import gleam/string
import vec

pub fn solve(in) {
  parse(in)
  |> list.filter_map(fn(r) { move_robot(r, 100, #(101, 103)) })
  |> get_safety_factor(#(101, 103))
}

pub fn solve_b(in) {
  let start = parse(in)

  // looks like it repeats on every 103 iterations starting on 134
  list.range(1, 100)
  |> list.map(fn(x) { 134 + { x * 103 } })
  |> list.each(fn(time) {
    start
    |> list.filter_map(fn(r) { move_robot(r, time, #(101, 103)) })
    |> draw_map(#(101, 103))

    process.sleep(250)
    io.println_error("")
    io.println_error("time: " <> int.to_string(time))
  })
}

pub fn parse(in) {
  in
  |> string.trim()
  |> string.split("\n")
  |> list.filter_map(parse_robot_line)
}

pub fn parse_robot_line(in) {
  let parse_xy = fn(in) {
    use #(_, xy) <- result.try(string.split_once(in, "="))
    use #(x, y) <- result.try(string.split_once(xy, ","))
    use x_num <- result.try(int.parse(x))
    use y_num <- result.try(int.parse(y))

    Ok(#(x_num, y_num))
  }

  use #(p, v) <- result.try(string.split_once(in, " "))
  case parse_xy(p), parse_xy(v) {
    Ok(p), Ok(v) -> Ok(Robot(p, v))
    _, _ -> Error(Nil)
  }
}

pub fn move_robot(robot: Robot, time: Int, bounds: #(Int, Int)) {
  let move_vec = #(robot.vel.0 * time, robot.vel.1 * time)
  let new_pos = vec.add(robot.pos, move_vec)

  use wrapped_x <- result.try(int.modulo(new_pos.0, bounds.0))
  use wrapped_y <- result.try(int.modulo(new_pos.1, bounds.1))

  Ok(Robot(..robot, pos: #(wrapped_x, wrapped_y)))
}

pub fn get_safety_factor(robots: List(Robot), bounds: #(Int, Int)) {
  let mid_x = bounds.0 / 2
  let mid_y = bounds.1 / 2

  let quadrants =
    list.group(robots, fn(r) {
      let on_quadrant_line = r.pos.0 == mid_x || r.pos.1 == mid_y
      case on_quadrant_line, r.pos.0 < mid_x, r.pos.1 < mid_y {
        True, _, _ -> 0
        _, True, True -> 1
        _, True, False -> 2
        _, False, True -> 3
        _, False, False -> 4
      }
    })

  let quadrant_sizes =
    quadrants
    |> dict.filter(fn(k, _) { k != 0 })
    |> dict.to_list()
    |> list.map(fn(x) { list.length(x.1) })

  list.reduce(quadrant_sizes, int.multiply)
}

pub type Robot {
  Robot(pos: vec.Vector, vel: vec.Vector)
}

pub fn draw_map(robots: List(Robot), bounds: #(Int, Int)) {
  use y <- list.each(list.range(0, bounds.1 - 1))
  use x <- list.each(list.range(0, bounds.0 - 1))

  let robot_at_pos =
    robots
    |> list.count(fn(r) { r.pos.0 == x && r.pos.1 == y })

  case x == 0, robot_at_pos {
    True, 0 -> io.print_error("\n.")
    False, 0 -> io.print_error(".")
    True, x -> io.print_error("\n" <> int.to_string(x))
    False, x -> io.print_error(int.to_string(x))
  }
}
// ..................1.....................................................1..........................1.
// .....................................................................................................
// .....................................................................................................
// .....................................................1..........1....1...............................
// .......................................1...............1.............................................
// ................1........................................................................1...........
// ...................1.................................................................................
// ...........................................................................1.........................
// .....................................................................................................
// ...................................................1..............1..................................
// .......................................1.................................................1...........
// 11.................1...................1............1.................................1..............
// ..1.....1..................................1.........................................................
// 1............................................................1......................1................
// ................1..........................................................................1.........
// .........................................................1...................................1.......
// ..........................................................................1..........................
// ...1..............................1..................................................................
// ...................................................................1.................................
// ....................................1...............................................................1
// .........1...........................................1...............................................
// ...................................................1......................................1..........
// ..................1.....................................................1.........1..................
// ...................................................................................1.................
// ................................................1..1..........1......................................
// .....................................................................................................
// ............................1................................................................1.......
// .............................1............1.1.1......................................................
// .........1..........................................1................................1...............
// ..................................1.......................1..........................................
// .....................................................................................................
// ....1..................................1....1........................................................
// .....................................................................................................
// .......................1......................1...............................................1......
// ..........................................................1..........................................
// ........................................1............................................................
// .....................................................................................................
// .........................1...........................................................................
// ..................................................1......................................1...........
// ..................................................................................................1..
// .....................................................................................................
// .....................................................................................................
// ........1............................................................................................
// .....................................................................................................
// .........1........1...........................1.......................1..............................
// .....................................................................................................
// .....................................................................................................
// ........1...........1111111111111111111111111111111..................................................
// ....................1.............................1.........................1........................
// ....................1.............................1...................1...............1..............
// ....................1.............................1................................................1.
// ....................1.............................1..................1........................1......
// ....................1..............1..............1......................1...........................
// ....................1.............111.............1.................................1................
// ....................1............11111............1..................................................
// ....................1...........1111111...........1..................................................
// ....................1..........111111111..........1.......................................1..........
// ....................1............11111............1..................................................
// ....................1...........1111111...........1..................................................
// ....................1..........111111111..........1...1........................1.....................
// ....................1.........11111111111.........1.................................................1
// ............1.......1........1111111111111........1..............................1..........1........
// ..............1.....1..........111111111..........1..............................1...................
// ....................1.........11111111111.........1...................1..............................
// ....................1........1111111111111........1.................1................................
// ..........1.........1.......111111111111111.......1..................................................
// ...1................1......11111111111111111......1..................................................
// ....................1........1111111111111........1..................................................
// ..1.................1.......111111111111111.......1................1.................................
// ....................1......11111111111111111......1.................................1................
// ....1...............1.....1111111111111111111.....1................1.................................
// ...1................1....111111111111111111111....1........................................1.........
// ....................1.............111.............1..................................................
// ....................1.............111.............1.....................1......1.....................
// ................1...1.............111.............1...............................1..................
// ....................1.............................1.........................1........................
// ....................1.............................1..................................................
// ....................1.............................1.............1....................................
// ....................1.............................1..................................................
// .......1.....1......1111111111111111111111111111111..................................................
// ....................................................................................................1
// ....1..............................1....................................................1........1...
// ..............1........................1.............................................................
// ..................................................................................1..................
// ...............................................................................1.....................
// .............11....................................1.................................................
// .........1.................................................................1.........................
// .........................1...........................................................................
// ..1...1..............................................................................................
// .....................................................................1.........................1.....
// ..............1.....1................................................................................
// .....................................................................................................
// ..............................................................11.....................................
// ......1..............................................................................................
// .....................................................................................................
// .1.........................................................................11.............1..........
// .....1.......1.......................................................................................
// ......................1..............................................................................
// 1....................................................................................................
// .....................................................................................................
// .....................................................................................................
// .....................................................................................................
// ....................1................................................................................
// time: 8168
